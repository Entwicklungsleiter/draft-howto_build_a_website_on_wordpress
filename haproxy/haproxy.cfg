
defaults
  retries 3
  option  redispatch
  timeout connect 5s
  timeout client 30s
  timeout server 30s
  timeout http-request 10s
  timeout http-keep-alive 2s
  timeout queue 5s
  timeout tunnel 2m
  timeout client-fin 1s
  timeout server-fin 1s

global
  log stdout format raw local0
  pidfile /var/run/haproxy-tep.pid
  stats   socket /var/run/haproxy.stats
  maxconn 20480

frontend default_80
  bind *:80
  mode http
  option httplog

#  acl lets_encrypt path_beg /.well-known/acme-challenge/
#  use_backend lets_encrypt if lets_encrypt 

  http-request redirect scheme https
  defaults
    log global

frontend ssl_443
# uncomment next line as soon as You have an SSL certificate
#  bind *:443 ssl crt /etc/letsencrypt/live/MYFIRSTDOMAIN.com/fullchain.pem 
  # for multiple certificates, append to the prev line: crt /etc/letsencrypt/live/MYSECONDDOMAIN.com/fullchain.pem
  mode http
  timeout connect 5s
  timeout client 30s
  timeout server 30s
  http-request add-header X-Forwarded-Proto https
  http-request add-header X-Forwarded-For %[src]
  http-request set-header X-Forwarded-Port %[dst_port]

  # 16000000 seconds: a bit more than 6 months
  # Nextcloud (if You use it) wants to have this set
  http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"

  # add Your domains to be handled here => increment host server id for each line
  acl host_server1 hdr_dom(host) -i www.MYFIRSTDOMAIN.com
  acl host_server2 hdr_dom(host) -i MYFIRSTDOMAIN.com
#  acl host_server3 hdr_dom(host) -i www.MYSECONDDOMAIN.com
#  acl host_server4 hdr_dom(host) -i MYSECONDDOMAIN.com

  # tell each domain which backend will handle it (see backends below)
  use_backend ssl_443_1 if host_server1
  use_backend ssl_443_1 if host_server2
#  use_backend ssl_443_3 if host_server3
#  use_backend ssl_443_3 if host_server4

  # MYFIRSTDOMAIN.com and aliases and subs
  use_backend ssl_443_2 if { path /matomo } || { path_beg /matomo/ }

backend ssl_443_1
  timeout connect 5s
  timeout server 30s
  mode http
  server mww-app mww-app:80 check fall 2 inter 1s

backend ssl_443_2
  timeout connect 5s
  timeout server 30s
  mode http
  http-request set-header X-Forwarded-Context /matomo
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request replace-path /matomo(/)?(.*) /\2
  server matomo-app matomo-app:80 check fall 2 inter 1s

# backend ssl_443_3
#  timeout connect 5s
#  timeout server 30s
#  mode http
#  server foo-app foo-app:80 check fall 2 inter 1s
